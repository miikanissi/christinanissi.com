"""
Django settings for christinanissi project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG", default=0))

# 'ALLOWED_HOSTS' should be a single string of hosts with a space between each.
# For example: 'ALLOWED_HOSTS=localhost 127.0.0.1 [::1]'
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "*").split(" ")

DEFAULT_FROM_EMAIL = os.environ.get("EMAIL_FROM", default="example@example.com")

# Sometimes my CSRF protection would fail locally due to misdetection of HTTPS as HTTPS.
# If you don't need this, you can remove it, but it shouldn't hurt anything.
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "django_extensions",
    "taggit",
    "django_summernote",
    "widget_tweaks",
    "sorl.thumbnail",
    "main",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "christinanissi.middleware.StatsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
]

ROOT_URLCONF = "christinanissi.urls"

# 'LOADERS' should be a single string of hosts with a space between each.
LOADERS = os.environ.get(
    "LOADERS",
    "django.template.loaders.filesystem.Loader django.template.loaders.app_directories.Loader",
).split(" ")
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "christinanissi.context_processors.settings",
            ],
            "loaders": LOADERS,
        },
    }
]

TEMPLATE_STRING_IF_INVALID = "VARIABLE UNDEFINED: %s"

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

WSGI_APPLICATION = "christinanissi.wsgi.application"

SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"

# Keep connections in the pool for an hour.
CONN_MAX_AGE = 60 * 60

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("DB_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("DB_NAME", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("DB_USER", "user"),
        "PASSWORD": os.environ.get("DB_PASSWORD", "password"),
        "HOST": os.environ.get("DB_HOST", "localhost"),
        "PORT": os.environ.get("DB_PORT", "5432"),
    }
}

SESSION_CACHE_ALIAS = "default"
SESSION_COOKIE_AGE = 365 * 24 * 60 * 60

EMAIL_BACKEND = os.environ.get(
    "EMAIL_BACKEND", "django.core.mail.backends.console.EmailBackend"
)
EMAIL_HOST = os.environ.get("EMAIL_HOST", "localhost")
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
EMAIL_PORT = int(os.environ.get("EMAIL_PORT", default=25))
EMAIL_USE_TLS = int(os.environ.get("EMAIL_USE_TLS", default=0))
EMAIL_USE_SSL = int(os.environ.get("EMAIL_USE_SSL", default=0))

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_L10N = True
USE_TZ = True

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": os.environ.get("DJANGO_LOG_LEVEL", "INFO"),
        }
    },
}

# Additional security
CSRF_TRUSTED_ORIGINS = os.environ.get("CSRF_TRUSTED_ORIGINS", "https://*").split(" ")
CSRF_COOKIE_SECURE = int(os.environ.get("CSRF_COOKIE_SECURE", default=0))
SESSION_COOKIE_SECURE = int(os.environ.get("SESSION_COOKIE_SECURE", default=0))
SESSION_COOKIE_HTTPONLY = int(os.environ.get("SESSION_COOKIE_HTTPONLY", default=0))
SECURE_CONTENT_TYPE_NOSNIFF = int(
    os.environ.get("SECURE_CONTENT_TYPE_NOSNIFF", default=0)
)
SECURE_SSL_REDIRECT = int(os.environ.get("SECURE_SSL_REDIRECT", default=0))
SECURE_HSTS_PRELOAD = int(os.environ.get("SECURE_HSTS_PRELOAD", default=0))
SECURE_HSTS_SECONDS = int(os.environ.get("SECURE_HSTS_SECONDS", default=0))
SECURE_HSTS_INCLUDE_SUBDOMAINS = int(
    os.environ.get("SECURE_HSTS_INCLUDE_SUBDOMAINS", default=0)
)

# Static files (CSS, JavaScript, Images)
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "mediafiles"

# App settings
TAGGIT_CASE_INSENSITIVE = True
SUMMERNOTE_CONFIG = {
    "iframe": True,
    "summernote": {
        "width": "100%",
        "height": "480",
        "maximumImageFileSize": "5242880",
        "attachment_filesize_limit": "5242880",
        "toolbar": [
            ["style", ["style"]],
            [
                "font",
                [
                    "bold",
                    "italic",
                    "underline",
                    "strikethrough",
                    "superscript",
                    "subscript",
                    "clear",
                ],
            ],
            ["fontsize", ["fontsize"]],
            ["color", ["color"]],
            ["para", ["ul", "ol", "paragraph"]],
            ["table", ["table", "hr"]],
            ["insert", ["link", "picture", "video"]],
            ["view", ["fullscreen", "undo", "redo", "codeview", "help"]],
        ],
    },
}
